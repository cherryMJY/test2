# Generated by Django 3.0.5 on 2020-07-21 14:32

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('model', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='TAlgorithm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('algorithm_name', models.CharField(blank=True, max_length=20, null=True)),
                ('algorithm_mask', models.CharField(blank=True, max_length=20, null=True)),
                ('algorithm_type', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 't_algorithm',
            },
        ),
        migrations.CreateModel(
            name='TEventRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_subject_id', models.IntegerField(blank=True, null=True)),
                ('event_object_id', models.IntegerField(blank=True, null=True)),
                ('category_id', models.IntegerField(blank=True, null=True)),
                ('repo_id', models.IntegerField(blank=True, null=True)),
                ('algorithm_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 't_event_rule',
            },
        ),
        migrations.CreateModel(
            name='TSpiderDatatype',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_type_name', models.CharField(blank=True, max_length=20, null=True)),
                ('data_type_mask', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 't_spider_datatype',
            },
        ),
        migrations.CreateModel(
            name='TSpiderDatawebsite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('website_name', models.CharField(blank=True, max_length=20, null=True)),
                ('website_mask', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 't_spider_datawebsite',
            },
        ),
        migrations.CreateModel(
            name='TSpiderProject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_website_id', models.IntegerField(blank=True, null=True)),
                ('data_type_id', models.IntegerField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('create_id', models.IntegerField(blank=True, null=True)),
                ('repo_id', models.IntegerField(blank=True, null=True)),
                ('create_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 't_spider_project',
            },
        ),
        migrations.CreateModel(
            name='TTriggerWord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trigger_word', models.CharField(blank=True, max_length=20, null=True)),
                ('event_rule_id', models.IntegerField(blank=True, null=True)),
                ('repo_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 't_trigger_word',
            },
        ),
        migrations.RenameField(
            model_name='tdataacquisitionlog',
            old_name='data_source',
            new_name='data_path',
        ),
        migrations.RemoveField(
            model_name='tattribute',
            name='attribute_datatype',
        ),
        migrations.RemoveField(
            model_name='tdatatype',
            name='datatype_identifier',
        ),
        migrations.RemoveField(
            model_name='tentityextractionlog',
            name='data_source',
        ),
        migrations.RemoveField(
            model_name='tnormalizedlog',
            name='original_entity_id',
        ),
        migrations.AddField(
            model_name='tattribute',
            name='algorithm_id',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='tattribute',
            name='data_type_id',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='tcategory',
            name='category_type',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='tdataacquisitionlog',
            name='data_source_name',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='tdatatype',
            name='category_id',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='tdatatype',
            name='repo_id',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='tentityextractionlog',
            name='data_acquisition_id',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='tnormalizedlog',
            name='original_entity_id1',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='tnormalizedlog',
            name='original_entity_id2',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='tattributemaplog',
            name='entity_id',
            field=models.CharField(blank=True, max_length=30, null=True),
        ),
        migrations.AlterField(
            model_name='tcleaninglog',
            name='entity_id',
            field=models.CharField(blank=True, max_length=30, null=True),
        ),
        migrations.AlterField(
            model_name='tdatatype',
            name='create_time',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='tmappingrule',
            name='coverage_rate',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='tnormalizedlog',
            name='merge_entity_id',
            field=models.CharField(blank=True, max_length=30, null=True),
        ),
        migrations.AlterField(
            model_name='tnormalizedrule',
            name='id',
            field=models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='tnormalizedruledetail',
            name='id',
            field=models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
    ]
